# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Isrc -I../common/3rdparty/spdlog/include -I../common/src -I../devka-graphic/3rdparty/glfw/include -I../devka-graphic/3rdparty/imgui -I../devka-graphic/src -I../devka-physics/src
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux/devka-core
TARGET = $(TARGETDIR)/libdevka-core.a
OBJDIR = ../bin/Debug-linux/.int/devka-core
DEFINES += -DDK_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g -std=c++20
LIBS += ../bin/Debug-linux/common/libcommon.a ../bin/Debug-linux/devka-physics/libdevka-physics.so ../bin/Debug-linux/devka-graphic/libdevka-graphic.so
LDDEPS += ../bin/Debug-linux/common/libcommon.a ../bin/Debug-linux/devka-physics/libdevka-physics.so ../bin/Debug-linux/devka-graphic/libdevka-graphic.so
ALL_LDFLAGS += $(LDFLAGS) -Wl,-rpath,'$$ORIGIN/../devka-physics' -Wl,-rpath,'$$ORIGIN/../devka-graphic'

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux/devka-core
TARGET = $(TARGETDIR)/libdevka-core.a
OBJDIR = ../bin/Release-linux/.int/devka-core
DEFINES += -DDK_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -std=c++20
LIBS += ../bin/Release-linux/common/libcommon.a ../bin/Release-linux/devka-physics/libdevka-physics.so ../bin/Release-linux/devka-graphic/libdevka-graphic.so
LDDEPS += ../bin/Release-linux/common/libcommon.a ../bin/Release-linux/devka-physics/libdevka-physics.so ../bin/Release-linux/devka-graphic/libdevka-graphic.so
ALL_LDFLAGS += $(LDFLAGS) -Wl,-rpath,'$$ORIGIN/../devka-physics' -Wl,-rpath,'$$ORIGIN/../devka-graphic' -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################


# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking devka-core
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning devka-core
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif